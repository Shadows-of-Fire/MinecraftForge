--- a/net/minecraft/item/crafting/RecipeManager.java
+++ b/net/minecraft/item/crafting/RecipeManager.java
@@ -50,9 +50,18 @@
 
       for(Entry<ResourceLocation, JsonObject> entry : p_212853_1_.entrySet()) {
          ResourceLocation resourcelocation = entry.getKey();
+         if (resourcelocation.func_110623_a().startsWith("_")) continue; //Forge: filter anything beginning with "_" as it's used for metadata.
 
          try {
+            if (!net.minecraftforge.common.crafting.CraftingHelper.processConditions(entry.getValue(), "conditions")) {
+               field_199521_c.info("Skipping loading recipe {} as it's conditions were not met", resourcelocation);
+               continue;
+            }
             IRecipe<?> irecipe = func_215377_a(resourcelocation, entry.getValue());
+            if (irecipe == null) {
+               field_199521_c.info("Skipping loading recipe {} as it's serializer returned null", resourcelocation);
+               continue;
+            }
             map.computeIfAbsent(irecipe.func_222127_g(), (p_223391_0_) -> {
                return ImmutableMap.builder();
             }).put(resourcelocation, irecipe);
@@ -67,26 +76,26 @@
       field_199521_c.info("Loaded {} recipes", (int)map.size());
    }
 
-   public <C extends IInventory, T extends IRecipe<C>> Optional<T> func_215371_a(IRecipeType<T> p_215371_1_, C p_215371_2_, World p_215371_3_) {
-      return this.func_215366_a(p_215371_1_).values().stream().flatMap((p_215372_3_) -> {
-         return Util.func_215081_a(p_215371_1_.func_222148_a(p_215372_3_, p_215371_3_, p_215371_2_));
+   public <C, T extends IRecipe<C>> Optional<T> func_215371_a(IRecipeType<T> p_215371_1_, C p_215371_2_, World p_215371_3_) {
+      return this.func_215366_a(p_215371_1_).values().stream().flatMap((p_215372_3_) -> {
+         return Util.func_215081_a(p_215371_1_.func_222148_a(p_215372_3_, p_215371_3_, p_215371_2_));
       }).findFirst();
    }
 
-   public <C extends IInventory, T extends IRecipe<C>> List<T> func_215370_b(IRecipeType<T> p_215370_1_, C p_215370_2_, World p_215370_3_) {
-      return this.func_215366_a(p_215370_1_).values().stream().flatMap((p_215380_3_) -> {
-         return Util.func_215081_a(p_215370_1_.func_222148_a(p_215380_3_, p_215370_3_, p_215370_2_));
+   public <C, T extends IRecipe<C>> List<T> func_215370_b(IRecipeType<T> p_215370_1_, C p_215370_2_, World p_215370_3_) {
+      return this.func_215366_a(p_215370_1_).values().stream().flatMap((p_215380_3_) -> {
+         return Util.func_215081_a(p_215370_1_.func_222148_a(p_215380_3_, p_215370_3_, p_215370_2_));
       }).sorted(Comparator.comparing((p_215379_0_) -> {
          return p_215379_0_.func_77571_b().func_77977_a();
       })).collect(Collectors.toList());
    }
 
-   private <C extends IInventory, T extends IRecipe<C>> Map<ResourceLocation, IRecipe<C>> func_215366_a(IRecipeType<T> p_215366_1_) {
+   private <C, T extends IRecipe<C>> Map<ResourceLocation, IRecipe<C>> func_215366_a(IRecipeType<T> p_215366_1_) {
       return (Map)this.field_199522_d.getOrDefault(p_215366_1_, Collections.emptyMap());
    }
 
    public <C extends IInventory, T extends IRecipe<C>> NonNullList<ItemStack> func_215369_c(IRecipeType<T> p_215369_1_, C p_215369_2_, World p_215369_3_) {
-      Optional<T> optional = this.func_215371_a(p_215369_1_, p_215369_2_, p_215369_3_);
+      Optional<T> optional = this.func_215371_a(p_215369_1_, p_215369_2_, p_215369_3_);
       if (optional.isPresent()) {
          return ((IRecipe)optional.get()).func_179532_b(p_215369_2_);
       } else {
